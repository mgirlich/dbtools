% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_insert_data.R
\name{db_insert_data}
\alias{db_insert_data}
\title{Insert data to a database table}
\usage{
db_insert_data(
  data,
  table,
  con,
  insert_cols = NULL,
  returning = NULL,
  trans = TRUE,
  batch_size = 50000
)
}
\arguments{
\item{data}{a data.frame.}

\item{table}{name of the database table.}

\item{con}{a DBIConnection object, as returned by \code{\link[DBI:dbConnect]{DBI::dbConnect()}}.}

\item{insert_cols}{columns from \code{data} to insert.}

\item{returning}{specifies the columns to return. If \code{NULL} (the default)
the number of updated/inserted rows are returned.
This can be one of the following:
\itemize{
\item a character vector of column names.
\item a list of scalar SQL (generated with \code{\link[=sql]{sql()}}). Note that only the
columns from \code{table} are visible, not the ones from \code{source}.
\item a mixture of these two.
Names are used as the names of the returned columns. For example
\code{returning = list("id", time = sql("now()"))}
will return a data.frame (or tibble if installed) with the columns
id and time.
}}

\item{trans}{perform operation in a transaction?}

\item{batch_size}{number of rows to process in a single statement.}
}
\description{
Insert data to a database table
}
