% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_insert_data.R
\name{db_insert_data}
\alias{db_insert_data}
\title{Insert data to a database table}
\usage{
db_insert_data(
  data,
  table,
  con,
  insert_cols = NULL,
  returning = NULL,
  trans = TRUE,
  batch_size = 50000
)
}
\arguments{
\item{data}{A data frame or the name of a database table.}

\item{table}{The name of the database table to update, insert to, or upsert
to. Can be an unquoted character string or an identifier created with \code{\link[=ident]{ident()}}.}

\item{con}{A DBIConnection object, as returned by \code{\link[DBI:dbConnect]{DBI::dbConnect()}}.}

\item{insert_cols}{Columns from \code{data} to insert.}

\item{returning}{Specifies the columns to return. If \code{NULL} (the default)
you have to use \code{\link[DBI:dbExecute]{DBI::dbExecute()}} to execute the SQL statement.

If not \code{NULL} you have to use \code{\link[DBI:dbGetQuery]{DBI::dbGetQuery()}} to get the updated rows.
\code{returning} can be one of the following:
\itemize{
\item a (named) character vector of column names.
\item a (named) SQL vector (generated with \code{\link[=sql]{sql()}}). Note that only the
columns from \code{table} are visible, not the ones from \code{source}.
\item a list of scalar SQL and scalar character.
}

Names are used as the names of the returned columns. For example
\code{returning = list("id", time = sql("now()"))}
to return the column \code{id} and the current time in the column \code{time}.}

\item{trans}{perform operation in a transaction?}

\item{batch_size}{number of rows to process in a single statement.}
}
\description{
Insert data to a database table
}
