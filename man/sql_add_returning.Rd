% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql_clauses.R
\name{sql_add_returning}
\alias{sql_add_returning}
\title{Add a RETURNING clause}
\usage{
sql_add_returning(sql, returning, con)
}
\arguments{
\item{sql}{An SQL clause.}

\item{returning}{specifies the columns to return. If \code{NULL} (the default)
the number of updated/inserted rows are returned.
This can be one of the following:
\itemize{
\item a character vector of column names.
\item a list of scalar SQL (generated with \code{\link[=SQL]{SQL()}}). Note that only the
columns from \code{table} are visible, not the ones from \code{source}.
\item a mixture of these two.
Names are used as the names of the returned columns. For example
\code{returning = list("id", time = SQL("now()"))}
will return a data.frame (or tibble if installed) with the columns
id and time.
}}

\item{con}{a DBIConnection object, as returned by \code{\link[DBI:dbConnect]{DBI::dbConnect()}}.}
}
\value{
An SQL clause (a scalar object of class SQL). If \code{returning} is
\code{NULL} then \code{sql} is returned as is.
}
\description{
\code{sql_add_returning()} adds a \code{RETURNING} clause to an existing SQL clause.
}
