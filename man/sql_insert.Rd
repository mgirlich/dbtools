% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql_insert.R
\name{sql_insert}
\alias{sql_insert}
\title{SQL query to insert missing records}
\usage{
sql_insert(
  data,
  table,
  con,
  conflict = NULL,
  insert_cols = NULL,
  returning = NULL,
  return_all = FALSE
)
}
\arguments{
\item{data}{A data.frame.}

\item{table}{Name of the database table to insert to.}

\item{con}{A DBIConnection object, as returned by \code{\link[DBI:dbConnect]{DBI::dbConnect()}}.}

\item{conflict}{A conflict clause generated by \code{\link[=sql_do_update]{sql_do_update()}} or
\code{\link[=sql_do_nothing]{sql_do_nothing()}}.}

\item{insert_cols}{Columns from table \code{data} to insert.}

\item{returning}{An \href{sql-expression-list}{SQL expression list} that specifies
which columns to return. Names are optional and used as column names in
the returned table. For the default \code{NULL} no rows are returned.}

\item{return_all}{A boolean that specifies whether only newly inserted rows
(\code{FALSE}, the default) are returned or also the matching, existing rows.}
}
\value{
An SQL query.
}
\description{
SQL query to insert missing records
}
\examples{
sql_insert(
  data = iris[1:2, ],
  table = "iris_tbl",
  con = con,
  conflict = sql_do_nothing(sql_unique_cols("Species")),
  insert_cols = c("Species", "Sepal.Length", "Sepal.Width"),
  returning = list(`widht_plus_one` = "Sepal.Width + 1", time = SQL("now()"))
)
}
