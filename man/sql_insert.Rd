% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql_insert.R
\name{sql_insert}
\alias{sql_insert}
\title{SQL insert query}
\usage{
sql_insert(
  data,
  table,
  con,
  conflict = NULL,
  insert_cols = NULL,
  returning = NULL,
  return_all = FALSE,
  mode = "new"
)
}
\arguments{
\item{data}{a data.frame.}

\item{table}{name of the database table.}

\item{con}{a DBIConnection object, as returned by \code{\link[DBI:dbConnect]{DBI::dbConnect()}}.}

\item{conflict}{specifies the action on a given conflict. If \code{NULL} (the
default) conflicts produce an error. If given then it must be generated
by \code{\link[=sql_do_update]{sql_do_update()}} or \code{\link[=sql_do_nothing]{sql_do_nothing()}}.}

\item{insert_cols}{columns from \code{data} to insert.}

\item{returning}{specifies the columns to return. If \code{NULL} (the default)
the number of updated/inserted rows are returned.
This can be one of the following:
\itemize{
\item a character vector of column names.
\item a list of scalar SQL (generated with \code{\link[=sql]{sql()}}). Note that only the
columns from \code{table} are visible, not the ones from \code{source}.
\item a mixture of these two.
Names are used as the names of the returned columns. For example
\code{returning = list("id", time = sql("now()"))}
will return a data.frame (or tibble if installed) with the columns
id and time.
}}

\item{return_all}{a boolean that specifies whether only newly inserted rows
(\code{FALSE}, the default) are returned or also the matching, existing rows.}

\item{mode}{specify how to check for a conflict:
\itemize{
\item "new": use the SQL "ON CONFLICT" clause.
\item "old": do not use the "ON CONFLICT" clause but an anti-join.
}}
}
\value{
An SQL query.
}
\description{
SQL insert query
}
\examples{
sql_insert(
  data = iris[1:2, ],
  table = "iris_tbl",
  con = con,
  conflict = sql_do_nothing("Species"),
  insert_cols = c("Species", "Sepal.Length", "Sepal.Width"),
  returning = list(width = "Sepal.Width", time = sql("now()"))
)
}
