% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql_insert.R
\name{sql-expression-list}
\alias{sql-expression-list}
\title{SQL expression list}
\description{
SQL expressions are used in the following arguments
\itemize{
\item \code{update} (in \code{\link[=db_update_data]{db_update_data()}} and \code{\link[=db_upsert_data]{db_upsert_data()}})
\item \code{where} (in \code{\link[=db_delete_data]{db_delete_data()}}, and \code{\link[=db_update_data]{db_update_data()}})
\item \code{returning} (in \code{\link[=db_delete_data]{db_delete_data()}}, \code{\link[=db_insert_data]{db_insert_data()}}, \code{\link[=db_insert_missing_data]{db_insert_missing_data()}}, \code{\link[=db_update_data]{db_update_data()}}, and \code{\link[=db_upsert_data]{db_upsert_data()}})
}
}
\details{
An SQL expression list is either a character vector e.g. \code{c("id", "name")}.
Or it can be a list where each element is
\itemize{
\item a scalar character, i.e. a character of length 1 which must not be \code{NA}.
\item a SQL class generated with \code{\link[dbplyr:sql]{dbplyr::sql()}} or \code{\link[glue:glue_sql]{glue::glue_sql()}}.
}

A scalar character refers to a column in the dataframe and of the database
table. If the element is named then the name is used for the database.
SQL elements are not translated but left as is. In an SQL expression
the table to be updated is referred to as \code{target} and the input data
as \code{source}.
}
