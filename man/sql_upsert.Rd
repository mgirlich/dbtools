% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql_insert_conflict.R
\name{sql_upsert}
\alias{sql_upsert}
\title{SQL for inserting missing values}
\usage{
sql_upsert(
  data,
  table,
  con,
  conflict_target,
  update,
  insert_cols = NULL,
  returning = NULL
)
}
\arguments{
\item{data}{A data.frame.}

\item{table}{Name of the database table to insert to.}

\item{con}{A DBIConnection object, as returned by \code{\link[DBI:dbConnect]{DBI::dbConnect()}}.}

\item{conflict_target}{A conflict target generated by \code{\link[=sql_conflict_cols]{sql_conflict_cols()}}
or \code{\link[=sql_constraint]{sql_constraint()}}.}

\item{update}{Specifies which columns to update how.}

\item{insert_cols}{Columns from table \code{data} to insert.}

\item{returning}{An \href{sql-expression-list}{SQL expression list} that specifies
which columns to return. Names are optional and used as column names in
the returned table. For the default \code{NULL} no rows are returned.}
}
\description{
SQL for inserting missing values
}
